name: Frontend Continuous Integration

on:
  workflow_dispatch:

  pull_request:
    branches:
      - main
    paths:
      - "starter/frontend/**"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run ESLint
        working-directory: starter/frontend
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run test
        working-directory: starter/frontend
        run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: 
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Restore Node.js modules cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Run test
        working-directory: starter/frontend
        run: npm run test

      - name: Build Docker image
        run: |
          docker build \
            --build-arg REACT_APP_MOVIE_API_URL=http://localhost:5000 \
            --tag mp-frontend:latest \
            starter/frontend
