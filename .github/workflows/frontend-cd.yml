name: Frontend Continuous Deployment

on:
  workflow_dispatch:

  push:
    branches:
      - main
    paths:
      - "starter/frontend/**"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: starter/frontend
        run: npm install

      - name: Run test
        working-directory: starter/frontend
        run: npm run test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    environment: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name cluster

      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Setup kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          chmod +x kustomize
          sudo mv kustomize /usr/local/bin/

      - name: Get backend LoadBalancer URL
        run: |
          BACKEND_URL=$(kubectl get svc backend -n default -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "BACKEND_URL=http://$BACKEND_URL" >> $GITHUB_ENV

      - name: Build and push image to ECR
        working-directory: starter/frontend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: frontend
          IMAGE_TAG: ${{ github.sha }}
          REACT_APP_MOVIE_API_URL: ${{ env.BACKEND_URL }}
        run: |
          docker build \
            --build-arg REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy manifests with kustomize
        working-directory: starter/frontend/k8s
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: frontend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          kustomize edit set image frontend=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          kustomize build | kubectl apply --validate=false -f -
     
      - name: Print application URL
        run: |
          kubectl get svc -A